# version: 2
# jobs:
#   build:
#     parallelism: 3
#     docker:
#       - image: circleci/ruby:2.5.8-node-browsers
#         environment:
#           BUNDLE_JOBS: 3
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#           PGHOST: 127.0.0.1
#           PGUSER: circleci-demo-ruby
#           RAILS_ENV: test
#       - image: circleci/postgres:9.5-alpine
#         environment:
#           POSTGRES_USER: postgres
#           POSTGRES_DB: postgres
#           POSTGRES_PASSWORD: postgres
#     steps:
#       - checkout
#       - run:
#           name: Bundler の指定
#           command: bundle -v

#       - restore_cache:
#           keys:
#             - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#             - rails-demo-bundle-v2-

#       - run:
#           name: バンドル インストール
#           command: bundle check --path vendor/bundle || bundle install --deployment

#       - run: yarn install

#       - save_cache:
#           key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle

#       - run:
#           name: データベースのセットアップ
#           command: |
#             bin/rails db:create RAILS_ENV=test
#             bin/rails db:migrate RAILS_ENV=test

#       - run:
#           name: RSpec の並列実行
#           command: |
#             bundle exec rspec --profile 10 \
#                               --format RspecJunitFormatter \
#                               --out test_results/rspec.xml \
#                               --format progress \
#                               $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
#       - store_test_results:
#           path: test_results

version: 2.1
jobs:
  test:
    machine:
      image: circleci/classic:edge
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: create db
          command: docker-compose run web rails db:create
      - run:
          name: test
          command: docker-compose run web bin/rspec
      - run:
          name: docker-compose down
          command: docker-compose down
